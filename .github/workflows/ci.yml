# .github/workflows/ci.yml
# Comprehensive CI for all supported platforms

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # macOS and Apple Platforms
  build-macos:
    runs-on: macos-14
    name: macOS (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_16.4.app
      - name: Install Swift ${{ matrix.swift-version }}
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Show versions
        run: |
          xcodebuild -version
          swift --version
      - name: Build and Test
        run: |
          swift build -v
          swift test -v

  build-ios:
    runs-on: macos-14
    name: iOS (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_16.4.app
      - name: Install Swift ${{ matrix.swift-version }}
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Build and Test
        run: |
          swift build -v --triple arm64-apple-ios13.0
          swift test -v --triple arm64-apple-ios13.0

  build-tvos:
    runs-on: macos-14
    name: tvOS (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_16.4.app
      - name: Install Swift ${{ matrix.swift-version }}
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Build and Test
        run: |
          swift build -v --triple arm64-apple-tvos13.0
          swift test -v --triple arm64-apple-tvos13.0

  build-visionos:
    runs-on: macos-14
    name: visionOS (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_16.4.app
      - name: Install Swift ${{ matrix.swift-version }}
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Build and Test
        run: |
          swift build -v --triple arm64-apple-visionos1.0
          swift test -v --triple arm64-apple-visionos1.0

  # Linux
  build-linux:
    runs-on: ubuntu-latest
    name: Linux (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Show Swift version
        run: swift --version
      - name: Build and Test
        run: |
          swift build -v
          swift test -v

  build-linux-release:
    runs-on: ubuntu-latest
    name: Linux Release (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Show Swift version
        run: swift --version
      - name: Build and Test Release
        run: |
          swift build -c release -v
          swift test -c release -v

  # Windows
  build-windows:
    runs-on: windows-2022
    name: Windows (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Verify Swift installation
        run: |
          swift --version
          swift build --help
        shell: pwsh
      - name: Build and Test
        run: |
          swift build -v
          swift test -v
        shell: pwsh

  build-windows-release:
    runs-on: windows-2022
    name: Windows Release (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Verify Swift installation
        run: |
          swift --version
          swift build --help
        shell: pwsh
      - name: Build and Test Release
        run: |
          swift build -c release -v
          swift test -c release -v
        shell: pwsh
