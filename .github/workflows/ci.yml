# .github/workflows/ci.yml
# Comprehensive CI for all supported platforms

name: CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  # macOS and Apple Platforms
  build-macos:
    runs-on: ${{ matrix.runner }}
    name: macOS (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        include:
          - swift-version: 5.9
            runner: macos-14
          - swift-version: 6.1.2
            runner: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16'
      - name: Install Swift ${{ matrix.swift-version }}
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Show versions
        run: |
          xcodebuild -version
          swift --version
      - name: Clean build directory
        run: rm -rf .build
      - name: Build and Test
        run: |
          swift build -v
          swift test -v

  build-ios:
    runs-on: ${{ matrix.runner }}
    name: iOS (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        include:
          - swift-version: 5.9
            runner: macos-14
          - swift-version: 6.1.2
            runner: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16'
      - name: Install Swift ${{ matrix.swift-version }}
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Clean build directory
        run: rm -rf .build
      - name: Build and Test
        run: |
          xcodebuild -scheme genetic-solver -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' build test

  build-tvos:
    runs-on: ${{ matrix.runner }}
    name: tvOS (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        include:
          - swift-version: 5.9
            runner: macos-14
          - swift-version: 6.1.2
            runner: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16'
      - name: Install Swift ${{ matrix.swift-version }}
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Clean build directory
        run: rm -rf .build
      - name: Build and Test
        run: |
          xcodebuild -scheme genetic-solver -destination 'platform=tvOS Simulator,name=Apple TV 4K (3rd generation),OS=latest' build test

  build-visionos:
    runs-on: ${{ matrix.runner }}
    name: visionOS (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        include:
          - swift-version: 5.9
            runner: macos-14
          - swift-version: 6.1.2
            runner: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16'
      - name: Install Swift ${{ matrix.swift-version }}
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Clean build directory
        run: rm -rf .build
      - name: Build and Test
        run: |
          xcodebuild -scheme genetic-solver -destination 'platform=visionOS Simulator,name=Apple Vision Pro,OS=latest' build test

  # Linux
  build-linux:
    runs-on: ubuntu-latest
    name: Linux (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Show Swift version
        run: swift --version
      - name: Build and Test
        run: |
          swift build -v
          swift test -v

  build-linux-release:
    runs-on: ubuntu-latest
    name: Linux Release (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Show Swift version
        run: swift --version
      - name: Build and Test Release
        run: |
          swift build -c release -v
          swift test -c release -v

  # Windows
  build-windows:
    runs-on: windows-2022
    name: Windows (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Verify Swift installation
        run: |
          swift --version
          swift build --help
        shell: pwsh
      - name: Build and Test
        run: |
          swift build -v
          swift test -v
        shell: pwsh

  build-windows-release:
    runs-on: windows-2022
    name: Windows Release (Swift ${{ matrix.swift-version }})
    strategy:
      matrix:
        swift-version: [5.9, 6.1.2]
    steps:
      - uses: actions/checkout@v4
      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Verify Swift installation
        run: |
          swift --version
          swift build --help
        shell: pwsh
      - name: Build and Test Release
        run: |
          swift build -c release -v
          swift test -c release -v
        shell: pwsh

  # Release job - only runs on tag pushes
  release:
    runs-on: macos-14
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-macos, build-ios, build-tvos, build-visionos, build-linux, build-linux-release, build-windows, build-windows-release]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Install Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: "5.9"

      - name: Clean build directory
        run: rm -rf .build

      - name: Build Release
        run: swift build -c release

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## What's Changed

            This release includes:
            - Genetic algorithm framework improvements
            - Cross-platform support (macOS, iOS, tvOS, visionOS, Linux, Windows)
            - Enhanced CI/CD pipeline

            ## Installation

            ```swift
            dependencies: [
                .package(url: "https://github.com/Kosikowski/genetic-solver.git", from: "${{ github.ref_name }}")
            ]
            ```

            ## Supported Platforms

            - macOS 13.0+
            - iOS 17.0+
            - tvOS 17.0+
            - visionOS 1.0+
            - Linux
            - Windows

            ## Swift Version Support

            - Swift 5.9+
            - Swift 6.1.2+
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
